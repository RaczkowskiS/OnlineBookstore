{"uid":"9da75f6d715967d4","name":"PUT /Books/{id} -> 400 if body is incorrect","fullName":"books.EditBookTest.putBooksId_return400ForIncorrectBody","historyId":"d8165017379b573a4a87fa1506d3c87","time":{"start":1758857184876,"stop":1758857185130,"duration":254},"description":"","status":"failed","statusMessage":"HTTP status should be 400 ==> expected: <400> but was: <200>","statusTrace":"org.opentest4j.AssertionFailedError: HTTP status should be 400 ==> expected: <400> but was: <200>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:563)\r\n\tat books.EditBookTest.putBooksId_return400ForIncorrectBody(EditBookTest.java:69)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"HTTP status should be 400 ==> expected: <400> but was: <200>","statusTrace":"org.opentest4j.AssertionFailedError: HTTP status should be 400 ==> expected: <400> but was: <200>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:563)\r\n\tat books.EditBookTest.putBooksId_return400ForIncorrectBody(EditBookTest.java:69)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n","steps":[{"name":"Assert HTTP 400","time":{"start":1758857185128,"stop":1758857185128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":1},"afterStages":[],"labels":[{"name":"tag","value":"Regression"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:books.EditBookTest]/[method:putBooksId_return400ForIncorrectBody()]"},{"name":"epic","value":"Bookstore API"},{"name":"feature","value":"Books"},{"name":"story","value":"PUT /Books/{id} return 400 if body is incorrect"},{"name":"host","value":"DESKTOP-L8M4IOP"},{"name":"thread","value":"4780@DESKTOP-L8M4IOP.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"books.EditBookTest"},{"name":"testClass","value":"books.EditBookTest"},{"name":"testMethod","value":"putBooksId_return400ForIncorrectBody"},{"name":"suite","value":"books.EditBookTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["Regression"]},"source":"9da75f6d715967d4.json","parameterValues":[]}